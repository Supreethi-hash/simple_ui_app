{
  "info": {
    "name": "Login & Item API Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "collection-qa"
  },
  "item": [
    {
      "name": "Register User",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"{{username}}\",\n  \"password\": \"{{password}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/register",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "register"
          ]
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.environment.set(\"username\", \"testuser\");",
              "pm.environment.set(\"password\", \"testpass\");"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 201) {",
              "  pm.test(\"User registered\", function () {",
              "    pm.expect(pm.response.json().message).to.eql(\"User registered\");",
              "  });",
              "} else if (pm.response.code === 400) {",
              "  pm.test(\"User already exists\", function () {",
              "    pm.expect(pm.response.json().message).to.eql(\"User already exists\");",
              "  });",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Login User",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"{{username}}\",\n  \"password\": \"{{password}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/login",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "login"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Login successful\", function () {",
              "  pm.response.to.have.status(200);",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.message).to.eql(\"Login successful\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Add Item",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"text\": \"Milk\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/items",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "items"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Item created\", function () {",
              "  pm.response.to.have.status(201);",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.text).to.eql(\"Milk\");",
              "  pm.environment.set(\"itemId\", jsonData.id);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get Items",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/items",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "items"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Get items success\", function () {",
              "  pm.response.to.have.status(200);",
              "  var jsonData = pm.response.json();",
              "  pm.expect(Array.isArray(jsonData)).to.be.true;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Update Item",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"text\": \"Bread\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/items/{{itemId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "items",
            "{{itemId}}"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Item updated\", function () {",
              "  pm.response.to.have.status(200);",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.text).to.eql(\"Bread\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Update Item - Invalid",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{}"
        },
        "url": {
          "raw": "{{baseUrl}}/items/{{itemId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "items",
            "{{itemId}}"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Item update failed\", function () {",
              "  pm.response.to.have.status(400);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Delete Item",
      "request": {
        "method": "DELETE",
        "url": {
          "raw": "{{baseUrl}}/items/{{itemId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "items",
            "{{itemId}}"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Item deleted\", function () {",
              "  pm.response.to.have.status(200);",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.id).to.eql(Number(pm.environment.get(\"itemId\")));",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Delete Item Again",
      "request": {
        "method": "DELETE",
        "url": {
          "raw": "{{baseUrl}}/items/{{itemId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "items",
            "{{itemId}}"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Item already deleted\", function () {",
              "  pm.response.to.have.status(404);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}