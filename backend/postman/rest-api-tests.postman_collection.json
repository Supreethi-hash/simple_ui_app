{
  "info": {
    "name": "API Test automation",
    "_postman_id": "5f1b4bdb-11e8-4f20-a9ad-1e0d4f883c4a",
    "description": "API tests for simple React+Node login + item management backend",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Register User",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"pass@1234\"\n}"
        },
        "url": {
          "raw": "http://localhost:5000/register",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "5000",
          "path": [
            "register"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", () => pm.response.to.have.status(201));",
              "pm.test(\"User registered message\", () => {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.eql(\"User registered\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Login - Success",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"pass@1234\"\n}"
        },
        "url": {
          "raw": "http://localhost:5000/login",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "5000",
          "path": [
            "login"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
              "pm.test(\"Login success message\", () => {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.eql(\"Login successful\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Login - Wrong Password",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"pass@0987\"\n}"
        },
        "url": {
          "raw": "http://localhost:5000/login",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "5000",
          "path": [
            "login"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 401\", () => pm.response.to.have.status(401));",
              "pm.test(\"Invalid credentials message\", () => {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.eql(\"Invalid credentials\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get Items - Empty List",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:5000/items",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "5000",
          "path": [
            "items"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
              "pm.test(\"Body is an array\", () => {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(Array.isArray(jsonData)).to.be.true;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Add Item",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"text\": \"Hello!\"\n}"
        },
        "url": {
          "raw": "http://localhost:5000/items",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "5000",
          "path": [
            "items"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", () => pm.response.to.have.status(201));",
              "pm.test(\"Item has text\", () => {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.text).to.eql(\"Hello!\");",
              "    pm.environment.set(\"itemId\", jsonData.id);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Update Item",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"text\": \"Hi\"\n}"
        },
        "url": {
          "raw": "http://localhost:5000/items/{{itemId}}",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "5000",
          "path": [
            "items",
            "{{itemId}}"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
              "pm.test(\"Updated text\", () => {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.text).to.eql(\"Hi\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Update Item - No Text",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{}"
        },
        "url": {
          "raw": "http://localhost:5000/items/{{itemId}}",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "5000",
          "path": [
            "items",
            "{{itemId}}"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", () => pm.response.to.have.status(400));"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Delete Item",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "http://localhost:5000/items/{{itemId}}",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "5000",
          "path": [
            "items",
            "{{itemId}}"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
              "pm.test(\"Deleted item ID matches\", () => {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.id).to.eql(Number(pm.environment.get(\"itemId\")));",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Delete Item - Already Deleted",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "http://localhost:5000/items/{{itemId}}",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "5000",
          "path": [
            "items",
            "{{itemId}}"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404\", () => pm.response.to.have.status(404));"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ],
  "event": [],
  "variable": []
}
